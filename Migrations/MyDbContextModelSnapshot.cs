// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet2.Models;

#nullable disable

namespace dotnet2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dotnet2.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Atividade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FisicaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FisicaId");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("dotnet2.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("dotnet2.Models.ReservaHotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroReserva")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("ReservaHotels");
                });

            modelBuilder.Entity("FisicaReservaHotel", b =>
                {
                    b.Property<int>("FisicasId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaHotelsId")
                        .HasColumnType("int");

                    b.HasKey("FisicasId", "ReservaHotelsId");

                    b.HasIndex("ReservaHotelsId");

                    b.ToTable("FisicaReservaHotel");
                });

            modelBuilder.Entity("JuridicaParceiro", b =>
                {
                    b.Property<int>("JuridicasId")
                        .HasColumnType("int");

                    b.Property<int>("ParceirosId")
                        .HasColumnType("int");

                    b.HasKey("JuridicasId", "ParceirosId");

                    b.HasIndex("ParceirosId");

                    b.ToTable("JuridicaParceiro");
                });

            modelBuilder.Entity("dotnet2.Models.Fisica", b =>
                {
                    b.HasBaseType("dotnet2.Models.Pessoa");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Fisica");
                });

            modelBuilder.Entity("dotnet2.Models.Juridica", b =>
                {
                    b.HasBaseType("dotnet2.Models.Pessoa");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fundacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Juridica");
                });

            modelBuilder.Entity("dotnet2.Models.Parceiro", b =>
                {
                    b.HasOne("dotnet2.Models.Fisica", "Fisica")
                        .WithMany("Parceiros")
                        .HasForeignKey("FisicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fisica");
                });

            modelBuilder.Entity("FisicaReservaHotel", b =>
                {
                    b.HasOne("dotnet2.Models.Fisica", null)
                        .WithMany()
                        .HasForeignKey("FisicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet2.Models.ReservaHotel", null)
                        .WithMany()
                        .HasForeignKey("ReservaHotelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JuridicaParceiro", b =>
                {
                    b.HasOne("dotnet2.Models.Juridica", null)
                        .WithMany()
                        .HasForeignKey("JuridicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet2.Models.Parceiro", null)
                        .WithMany()
                        .HasForeignKey("ParceirosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet2.Models.Fisica", b =>
                {
                    b.Navigation("Parceiros");
                });
#pragma warning restore 612, 618
        }
    }
}
